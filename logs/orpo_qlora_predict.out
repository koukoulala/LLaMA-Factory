nohup: ignoring input
[2024-06-21 01:58:27,200] [INFO] [real_accelerator.py:158:get_accelerator] Setting ds_accelerator to cuda (auto detect)
06/21/2024 01:58:28 - WARNING - llamafactory.hparams.parser - Evaluating model in 4/8-bit mode may cause lower scores.
06/21/2024 01:58:28 - INFO - llamafactory.hparams.parser - Process rank: 0, device: cuda:0, n_gpu: 1, distributed training: False, compute dtype: None
[INFO|tokenization_utils_base.py:2106] 2024-06-21 01:58:28,612 >> loading file tokenizer.model
[INFO|tokenization_utils_base.py:2106] 2024-06-21 01:58:28,612 >> loading file tokenizer.json
[INFO|tokenization_utils_base.py:2106] 2024-06-21 01:58:28,612 >> loading file added_tokens.json
[INFO|tokenization_utils_base.py:2106] 2024-06-21 01:58:28,612 >> loading file special_tokens_map.json
[INFO|tokenization_utils_base.py:2106] 2024-06-21 01:58:28,612 >> loading file tokenizer_config.json
06/21/2024 01:58:28 - INFO - llamafactory.data.template - Add pad token: </s>
06/21/2024 01:58:28 - INFO - llamafactory.data.loader - Loading dataset AssetGeneration/test.json...
Converting format of dataset (num_proc=16):   0%|          | 0/5000 [00:00<?, ? examples/s]Converting format of dataset (num_proc=16): 100%|██████████| 5000/5000 [00:00<00:00, 28894.59 examples/s]
Running tokenizer on dataset (num_proc=16):   0%|          | 0/5000 [00:00<?, ? examples/s]Running tokenizer on dataset (num_proc=16):   6%|▋         | 313/5000 [00:00<00:03, 1318.39 examples/s]Running tokenizer on dataset (num_proc=16):  44%|████▍     | 2191/5000 [00:00<00:00, 7639.05 examples/s]Running tokenizer on dataset (num_proc=16):  81%|████████▏ | 4064/5000 [00:00<00:00, 11363.34 examples/s]Running tokenizer on dataset (num_proc=16): 100%|██████████| 5000/5000 [00:00<00:00, 8706.98 examples/s] 
[INFO|configuration_utils.py:731] 2024-06-21 01:58:30,164 >> loading configuration file /data/xiaoyukou/ckpts/Mistral-7B-Instruct-v0.2/config.json
[INFO|configuration_utils.py:796] 2024-06-21 01:58:30,165 >> Model config MistralConfig {
  "_name_or_path": "/data/xiaoyukou/ckpts/Mistral-7B-Instruct-v0.2",
  "architectures": [
    "MistralForCausalLM"
  ],
  "attention_dropout": 0.0,
  "bos_token_id": 1,
  "eos_token_id": 2,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 32768,
  "model_type": "mistral",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "rms_norm_eps": 1e-05,
  "rope_theta": 1000000.0,
  "sliding_window": null,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.41.0.dev0",
  "use_cache": true,
  "vocab_size": 32000
}

input_ids:
[1, 28705, 733, 16289, 28793, 5919, 8270, 28705, 28770, 1964, 10220, 297, 4300, 3842, 28725, 2818, 356, 272, 2296, 1871, 28747, 13, 13, 17500, 5140, 28747, 4449, 1508, 2849, 28723, 3423, 1466, 16210, 404, 28723, 675, 28748, 28726, 7041, 28733, 2031, 288, 28748, 8830, 2951, 28733, 28726, 24681, 28723, 2842, 28804, 3457, 28770, 28746, 28740, 28734, 28734, 28784, 28782, 28774, 28800, 3457, 28782, 28746, 28750, 28782, 28740, 28787, 28782, 28800, 3457, 28770, 28770, 28770, 28746, 28750, 28782, 28740, 28774, 28784, 28800, 3457, 28770, 28770, 28784, 28746, 28750, 28782, 28740, 28787, 28750, 28800, 3457, 28770, 28770, 28787, 28746, 28750, 28782, 28740, 28787, 28770, 28800, 3457, 28770, 28770, 28783, 28746, 28750, 28782, 28740, 28787, 28781, 28800, 3457, 28770, 28781, 28783, 28746, 28770, 28782, 28782, 28783, 28740, 28800, 5646, 28730, 313, 28746, 28781, 28783, 28781, 28800, 23114, 28730, 9974, 28746, 11155, 28705, 13, 12075, 28747, 1679, 1466, 16210, 404, 28723, 675, 28705, 13, 9633, 28747, 365, 28750, 28743, 8074, 1939, 12860, 8074, 1939, 13281, 288, 567, 26999, 28705, 13, 22971, 288, 4068, 28747, 28705, 842, 12670, 2951, 365, 24681, 387, 7973, 7809, 1962, 365, 7041, 13281, 288, 342, 8580, 12422, 28765, 346, 404, 28745, 28705, 842, 7497, 27074, 28735, 842, 16123, 28790, 22285, 842, 12670, 2951, 365, 24681, 842, 13341, 13281, 19641, 842, 21013, 25181, 842, 12670, 2951, 365, 24681, 28747, 12948, 1590, 4922, 2956, 297, 4922, 816, 1223, 842, 21815, 272, 24443, 13909, 12670, 2951, 9315, 28713, 304, 365, 24681, 842, 8420, 522, 12670, 2951, 15210, 354, 1756, 11019, 442, 4655, 9405, 5938, 842, 382, 6185, 16970, 18945, 842, 26406, 354, 8648, 288, 16782, 495, 12670, 2951, 365, 24681, 842, 2483, 680, 10636, 28747, 842, 995, 993, 835, 737, 28747, 842, 28705, 13, 15962, 13063, 28747, 1444, 28705, 28783, 28781, 298, 28705, 28774, 28734, 6128, 28723, 28705, 13, 733, 28748, 16289, 28793]
inputs:
<s>  [INST] Please generate 3 Ad Description in English language, based on the following information:

FinalUrl: https://www.nextdayflyers.com/banner-printing/vinyl-banners.php?attr3=100659&attr5=25175&attr333=25196&attr336=25172&attr337=25173&attr338=25174&attr348=35581&product_id=484&calc_variant=LIST 
Domain: nextdayflyers.com 
Category: B2C Services -- Personal Services -- Printing & Publishing 
LandingPage:  . Vinyl Banners - Custom Premium Banner Printing | NextDayFlyers;  . PRODUCTS . SERVICES . Vinyl Banners . Select Print Options . Overall Rating . Vinyl Banners: Promote Anywhere in Any Weather . Choose the Perfect Size Vinyl Signs and Banners . Durable Vinyl Material for Indoor or Outdoor Use . Hanging Made Easy . Tips for Designing Effective Vinyl Banners . Get more tips: . You may also like: . 
CharacterLimit: between 84 to 90 characters. 
 [/INST]
06/21/2024 01:58:30 - INFO - llamafactory.model.utils.quantization - Quantizing model to 4 bit.
06/21/2024 01:58:30 - INFO - llamafactory.model.patcher - Using KV cache for faster generation.
[INFO|modeling_utils.py:3460] 2024-06-21 01:58:30,177 >> loading weights file /data/xiaoyukou/ckpts/Mistral-7B-Instruct-v0.2/model.safetensors.index.json
[INFO|modeling_utils.py:1508] 2024-06-21 01:58:30,177 >> Instantiating MistralForCausalLM model under default dtype torch.bfloat16.
[INFO|configuration_utils.py:962] 2024-06-21 01:58:30,178 >> Generate config GenerationConfig {
  "bos_token_id": 1,
  "eos_token_id": 2
}

Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:00<00:01,  1.19it/s]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:01<00:00,  1.27it/s]Loading checkpoint shards: 100%|██████████| 3/3 [00:02<00:00,  1.35it/s]Loading checkpoint shards: 100%|██████████| 3/3 [00:02<00:00,  1.32it/s]
[INFO|modeling_utils.py:4269] 2024-06-21 01:58:32,784 >> All model checkpoint weights were used when initializing MistralForCausalLM.

[INFO|modeling_utils.py:4277] 2024-06-21 01:58:32,784 >> All the weights of MistralForCausalLM were initialized from the model checkpoint at /data/xiaoyukou/ckpts/Mistral-7B-Instruct-v0.2.
If your task is similar to the task the model of the checkpoint was trained on, you can already use MistralForCausalLM for predictions without further training.
[INFO|configuration_utils.py:915] 2024-06-21 01:58:32,786 >> loading configuration file /data/xiaoyukou/ckpts/Mistral-7B-Instruct-v0.2/generation_config.json
[INFO|configuration_utils.py:962] 2024-06-21 01:58:32,786 >> Generate config GenerationConfig {
  "bos_token_id": 1,
  "eos_token_id": 2
}

06/21/2024 01:58:32 - INFO - llamafactory.model.utils.attention - Using torch SDPA for faster training and inference.
06/21/2024 01:58:32 - INFO - llamafactory.model.adapter - Upcasting trainable params to float32.
06/21/2024 01:58:32 - INFO - llamafactory.model.adapter - Fine-tuning method: LoRA
06/21/2024 01:58:33 - INFO - llamafactory.model.adapter - Loaded adapter(s): saves/mistral/orpo_qlora
06/21/2024 01:58:33 - INFO - llamafactory.model.loader - all params: 7262703616
[INFO|trainer.py:3719] 2024-06-21 01:58:33,369 >> ***** Running Prediction *****
[INFO|trainer.py:3721] 2024-06-21 01:58:33,369 >>   Num examples = 5000
[INFO|trainer.py:3724] 2024-06-21 01:58:33,369 >>   Batch size = 20
  0%|          | 0/250 [00:00<?, ?it/s]  1%|          | 2/250 [00:31<1:05:04, 15.74s/it]  1%|          | 3/250 [00:55<1:19:28, 19.31s/it]  2%|▏         | 4/250 [01:08<1:09:29, 16.95s/it]  2%|▏         | 5/250 [01:32<1:19:13, 19.40s/it]  2%|▏         | 6/250 [01:48<1:14:34, 18.34s/it]  3%|▎         | 7/250 [02:05<1:12:13, 17.83s/it]  3%|▎         | 8/250 [02:16<1:02:54, 15.60s/it]  4%|▎         | 9/250 [03:00<1:37:43, 24.33s/it]  4%|▍         | 10/250 [03:15<1:26:09, 21.54s/it]  4%|▍         | 11/250 [03:33<1:21:02, 20.34s/it]  5%|▍         | 12/250 [03:55<1:23:38, 21.09s/it]  5%|▌         | 13/250 [04:14<1:19:55, 20.23s/it]  6%|▌         | 14/250 [04:27<1:11:24, 18.15s/it]  6%|▌         | 15/250 [04:39<1:04:13, 16.40s/it]  6%|▋         | 16/250 [05:05<1:15:18, 19.31s/it]  7%|▋         | 17/250 [05:22<1:12:02, 18.55s/it]  7%|▋         | 18/250 [05:47<1:19:30, 20.56s/it]  8%|▊         | 19/250 [07:44<3:09:48, 49.30s/it]  8%|▊         | 20/250 [08:17<2:50:25, 44.46s/it]  8%|▊         | 21/250 [08:40<2:25:08, 38.03s/it]  9%|▉         | 22/250 [09:01<2:05:27, 33.02s/it]  9%|▉         | 23/250 [09:24<1:52:52, 29.83s/it] 10%|▉         | 24/250 [09:43<1:41:06, 26.84s/it] 10%|█         | 25/250 [11:48<3:30:52, 56.23s/it] 10%|█         | 26/250 [12:08<2:49:19, 45.36s/it] 11%|█         | 27/250 [12:32<2:24:23, 38.85s/it] 11%|█         | 28/250 [12:58<2:09:46, 35.07s/it] 12%|█▏        | 29/250 [13:23<1:57:47, 31.98s/it] 12%|█▏        | 30/250 [13:42<1:43:11, 28.14s/it] 12%|█▏        | 31/250 [14:00<1:31:41, 25.12s/it] 13%|█▎        | 32/250 [15:57<3:10:54, 52.54s/it] 13%|█▎        | 33/250 [16:19<2:36:49, 43.36s/it] 14%|█▎        | 34/250 [16:38<2:10:07, 36.14s/it] 14%|█▍        | 35/250 [18:31<3:32:16, 59.24s/it] 14%|█▍        | 36/250 [18:51<2:49:25, 47.50s/it] 15%|█▍        | 37/250 [19:16<2:24:41, 40.76s/it] 15%|█▌        | 38/250 [21:32<4:04:39, 69.24s/it] 16%|█▌        | 39/250 [21:49<3:08:10, 53.51s/it] 16%|█▌        | 40/250 [22:20<2:43:27, 46.70s/it] 16%|█▋        | 41/250 [22:41<2:16:29, 39.19s/it] 17%|█▋        | 42/250 [24:38<3:36:31, 62.46s/it] 17%|█▋        | 43/250 [25:03<2:56:34, 51.18s/it] 18%|█▊        | 44/250 [25:19<2:19:42, 40.69s/it] 18%|█▊        | 45/250 [25:40<1:58:42, 34.74s/it] 18%|█▊        | 46/250 [26:07<1:50:15, 32.43s/it] 19%|█▉        | 47/250 [26:37<1:47:47, 31.86s/it] 19%|█▉        | 48/250 [26:58<1:35:24, 28.34s/it] 20%|█▉        | 49/250 [27:11<1:19:50, 23.83s/it] 20%|██        | 50/250 [29:18<3:03:00, 54.90s/it] 20%|██        | 51/250 [29:47<2:35:53, 47.00s/it] 21%|██        | 52/250 [30:02<2:03:33, 37.44s/it] 21%|██        | 53/250 [30:31<1:54:38, 34.92s/it] 22%|██▏       | 54/250 [30:47<1:35:03, 29.10s/it] 22%|██▏       | 55/250 [31:10<1:29:26, 27.52s/it] 22%|██▏       | 56/250 [31:37<1:28:25, 27.35s/it] 23%|██▎       | 57/250 [31:56<1:19:10, 24.61s/it] 23%|██▎       | 58/250 [32:18<1:16:12, 23.81s/it] 24%|██▎       | 59/250 [32:47<1:21:26, 25.59s/it] 24%|██▍       | 60/250 [33:18<1:25:32, 27.01s/it] 24%|██▍       | 61/250 [33:32<1:12:46, 23.10s/it] 25%|██▍       | 62/250 [35:25<2:37:40, 50.32s/it] 25%|██▌       | 63/250 [35:41<2:04:22, 39.91s/it] 26%|██▌       | 64/250 [36:14<1:57:32, 37.92s/it] 26%|██▌       | 65/250 [36:29<1:35:52, 31.10s/it] 26%|██▋       | 66/250 [36:46<1:21:46, 26.66s/it] 27%|██▋       | 67/250 [37:06<1:15:28, 24.75s/it] 27%|██▋       | 68/250 [39:11<2:46:40, 54.95s/it] 28%|██▊       | 69/250 [39:34<2:16:29, 45.25s/it] 28%|██▊       | 70/250 [39:56<1:54:16, 38.09s/it] 28%|██▊       | 71/250 [40:13<1:35:28, 32.00s/it] 29%|██▉       | 72/250 [40:33<1:24:01, 28.32s/it] 29%|██▉       | 73/250 [40:59<1:21:04, 27.48s/it] 30%|██▉       | 74/250 [41:24<1:18:47, 26.86s/it] 30%|███       | 75/250 [43:24<2:39:45, 54.78s/it] 30%|███       | 76/250 [43:47<2:11:25, 45.32s/it] 31%|███       | 77/250 [44:14<1:54:53, 39.85s/it] 31%|███       | 78/250 [44:34<1:37:02, 33.85s/it] 32%|███▏      | 79/250 [44:57<1:26:59, 30.52s/it] 32%|███▏      | 80/250 [45:12<1:13:20, 25.89s/it] 32%|███▏      | 81/250 [45:28<1:04:36, 22.94s/it] 33%|███▎      | 82/250 [45:46<1:00:28, 21.60s/it] 33%|███▎      | 83/250 [46:08<1:00:07, 21.60s/it] 34%|███▎      | 84/250 [46:35<1:04:20, 23.26s/it] 34%|███▍      | 85/250 [46:59<1:04:25, 23.43s/it] 34%|███▍      | 86/250 [49:00<2:24:10, 52.74s/it] 35%|███▍      | 87/250 [49:15<1:52:42, 41.49s/it] 35%|███▌      | 88/250 [49:41<1:38:54, 36.64s/it] 36%|███▌      | 89/250 [49:57<1:21:35, 30.40s/it] 36%|███▌      | 90/250 [50:21<1:16:32, 28.70s/it] 36%|███▋      | 91/250 [50:37<1:05:53, 24.87s/it] 37%|███▋      | 92/250 [52:44<2:26:21, 55.58s/it] 37%|███▋      | 93/250 [54:40<3:12:41, 73.64s/it] 38%|███▊      | 94/250 [55:19<2:44:00, 63.08s/it] 38%|███▊      | 95/250 [55:38<2:08:45, 49.84s/it] 38%|███▊      | 96/250 [55:56<1:43:28, 40.32s/it] 39%|███▉      | 97/250 [56:22<1:31:55, 36.05s/it] 39%|███▉      | 98/250 [56:42<1:19:04, 31.21s/it] 40%|███▉      | 99/250 [57:02<1:10:14, 27.91s/it] 40%|████      | 100/250 [57:37<1:14:47, 29.92s/it] 40%|████      | 101/250 [57:52<1:03:17, 25.49s/it] 41%|████      | 102/250 [58:02<51:57, 21.07s/it]   41%|████      | 103/250 [58:20<49:21, 20.14s/it] 42%|████▏     | 104/250 [58:43<50:31, 20.76s/it] 42%|████▏     | 105/250 [59:03<49:57, 20.67s/it] 42%|████▏     | 106/250 [59:26<51:03, 21.28s/it] 43%|████▎     | 107/250 [59:53<54:51, 23.02s/it] 43%|████▎     | 108/250 [1:01:49<2:00:50, 51.06s/it] 44%|████▎     | 109/250 [1:02:25<1:49:26, 46.57s/it] 44%|████▍     | 110/250 [1:02:54<1:35:50, 41.07s/it] 44%|████▍     | 111/250 [1:03:13<1:20:15, 34.65s/it] 45%|████▍     | 112/250 [1:03:38<1:13:05, 31.78s/it] 45%|████▌     | 113/250 [1:03:55<1:02:08, 27.22s/it] 46%|████▌     | 114/250 [1:04:17<58:28, 25.80s/it]   46%|████▌     | 115/250 [1:04:33<50:52, 22.61s/it] 46%|████▋     | 116/250 [1:04:58<52:10, 23.36s/it] 47%|████▋     | 117/250 [1:05:19<50:09, 22.63s/it] 47%|████▋     | 118/250 [1:05:49<54:50, 24.93s/it] 48%|████▊     | 119/250 [1:05:59<44:44, 20.49s/it] 48%|████▊     | 120/250 [1:06:15<41:14, 19.03s/it] 48%|████▊     | 121/250 [1:06:27<36:33, 17.00s/it] 49%|████▉     | 122/250 [1:06:52<41:16, 19.35s/it] 49%|████▉     | 123/250 [1:07:14<42:53, 20.26s/it] 50%|████▉     | 124/250 [1:07:37<44:14, 21.06s/it] 50%|█████     | 125/250 [1:08:00<44:47, 21.50s/it] 50%|█████     | 126/250 [1:08:20<43:40, 21.13s/it] 51%|█████     | 127/250 [1:08:47<46:49, 22.84s/it] 51%|█████     | 128/250 [1:08:59<40:06, 19.73s/it] 52%|█████▏    | 129/250 [1:09:22<41:28, 20.56s/it] 52%|█████▏    | 130/250 [1:11:23<1:41:21, 50.68s/it] 52%|█████▏    | 131/250 [1:13:28<2:24:47, 73.00s/it] 53%|█████▎    | 132/250 [1:13:48<1:52:39, 57.28s/it] 53%|█████▎    | 133/250 [1:14:08<1:29:32, 45.92s/it] 54%|█████▎    | 134/250 [1:16:01<2:07:54, 66.16s/it] 54%|█████▍    | 135/250 [1:16:22<1:40:51, 52.63s/it] 54%|█████▍    | 136/250 [1:16:52<1:26:56, 45.76s/it] 55%|█████▍    | 137/250 [1:17:04<1:07:14, 35.70s/it] 55%|█████▌    | 138/250 [1:17:28<1:00:10, 32.24s/it] 56%|█████▌    | 139/250 [1:17:53<55:32, 30.02s/it]   56%|█████▌    | 140/250 [1:18:10<47:54, 26.13s/it] 56%|█████▋    | 141/250 [1:18:27<42:25, 23.35s/it] 57%|█████▋    | 142/250 [1:19:01<47:32, 26.41s/it] 57%|█████▋    | 143/250 [1:19:18<42:06, 23.61s/it] 58%|█████▊    | 144/250 [1:19:29<34:53, 19.75s/it] 58%|█████▊    | 145/250 [1:19:44<32:14, 18.43s/it] 58%|█████▊    | 146/250 [1:20:04<32:51, 18.96s/it] 59%|█████▉    | 147/250 [1:20:28<35:09, 20.48s/it] 59%|█████▉    | 148/250 [1:20:43<31:56, 18.79s/it] 60%|█████▉    | 149/250 [1:22:39<1:20:59, 48.11s/it] 60%|██████    | 150/250 [1:24:33<1:52:46, 67.67s/it] 60%|██████    | 151/250 [1:25:25<1:44:01, 63.04s/it] 61%|██████    | 152/250 [1:25:53<1:25:52, 52.58s/it] 61%|██████    | 153/250 [1:26:26<1:15:30, 46.70s/it] 62%|██████▏   | 154/250 [1:26:54<1:05:34, 40.98s/it] 62%|██████▏   | 155/250 [1:27:06<51:05, 32.27s/it]   62%|██████▏   | 156/250 [1:27:20<42:11, 26.93s/it] 63%|██████▎   | 157/250 [1:27:43<39:54, 25.75s/it] 63%|██████▎   | 158/250 [1:28:07<38:45, 25.28s/it] 64%|██████▎   | 159/250 [1:28:21<33:10, 21.87s/it] 64%|██████▍   | 160/250 [1:28:43<32:39, 21.78s/it] 64%|██████▍   | 161/250 [1:29:07<33:16, 22.43s/it] 65%|██████▍   | 162/250 [1:29:28<32:14, 21.98s/it] 65%|██████▌   | 163/250 [1:29:50<31:47, 21.92s/it] 66%|██████▌   | 164/250 [1:30:01<26:56, 18.80s/it] 66%|██████▌   | 165/250 [1:30:26<29:26, 20.79s/it] 66%|██████▋   | 166/250 [1:30:39<25:42, 18.36s/it] 67%|██████▋   | 167/250 [1:31:08<29:47, 21.54s/it] 67%|██████▋   | 168/250 [1:31:29<29:09, 21.34s/it] 68%|██████▊   | 169/250 [1:31:46<27:04, 20.05s/it] 68%|██████▊   | 170/250 [1:32:06<26:36, 19.96s/it] 68%|██████▊   | 171/250 [1:32:32<28:37, 21.74s/it] 69%|██████▉   | 172/250 [1:32:44<24:44, 19.03s/it] 69%|██████▉   | 173/250 [1:33:13<27:56, 21.77s/it] 70%|██████▉   | 174/250 [1:33:37<28:39, 22.63s/it] 70%|███████   | 175/250 [1:34:04<29:47, 23.83s/it] 70%|███████   | 176/250 [1:34:21<26:48, 21.74s/it] 71%|███████   | 177/250 [1:34:45<27:12, 22.37s/it] 71%|███████   | 178/250 [1:35:00<24:20, 20.28s/it] 72%|███████▏  | 179/250 [1:35:22<24:39, 20.84s/it] 72%|███████▏  | 180/250 [1:35:44<24:32, 21.03s/it] 72%|███████▏  | 181/250 [1:36:02<23:08, 20.13s/it] 73%|███████▎  | 182/250 [1:36:16<20:57, 18.49s/it] 73%|███████▎  | 183/250 [1:36:38<21:50, 19.57s/it] 74%|███████▎  | 184/250 [1:37:05<23:57, 21.78s/it] 74%|███████▍  | 185/250 [1:38:02<35:05, 32.39s/it] 74%|███████▍  | 186/250 [1:38:21<30:11, 28.30s/it] 75%|███████▍  | 187/250 [1:38:35<25:05, 23.90s/it] 75%|███████▌  | 188/250 [1:39:00<25:07, 24.32s/it] 76%|███████▌  | 189/250 [1:39:22<23:53, 23.50s/it] 76%|███████▌  | 190/250 [1:39:32<19:35, 19.58s/it] 76%|███████▋  | 191/250 [1:39:51<19:02, 19.36s/it] 77%|███████▋  | 192/250 [1:40:12<19:12, 19.87s/it] 77%|███████▋  | 193/250 [1:40:27<17:26, 18.37s/it] 78%|███████▊  | 194/250 [1:41:00<21:10, 22.69s/it] 78%|███████▊  | 195/250 [1:42:55<46:09, 50.36s/it] 78%|███████▊  | 196/250 [1:43:13<36:40, 40.75s/it] 79%|███████▉  | 197/250 [1:43:37<31:36, 35.78s/it] 79%|███████▉  | 198/250 [1:44:03<28:22, 32.74s/it] 80%|███████▉  | 199/250 [1:44:32<26:51, 31.61s/it] 80%|████████  | 200/250 [1:44:53<23:39, 28.38s/it] 80%|████████  | 201/250 [1:45:11<20:42, 25.36s/it] 81%|████████  | 202/250 [1:45:26<17:54, 22.39s/it] 81%|████████  | 203/250 [1:47:32<41:54, 53.50s/it] 82%|████████▏ | 204/250 [1:48:03<35:44, 46.63s/it] 82%|████████▏ | 205/250 [1:48:28<30:12, 40.27s/it] 82%|████████▏ | 206/250 [1:48:57<26:52, 36.66s/it] 83%|████████▎ | 207/250 [1:49:17<22:46, 31.78s/it] 83%|████████▎ | 208/250 [1:49:33<18:56, 27.05s/it] 84%|████████▎ | 209/250 [1:49:50<16:25, 24.03s/it] 84%|████████▍ | 210/250 [1:50:05<14:10, 21.26s/it] 84%|████████▍ | 211/250 [1:50:30<14:38, 22.54s/it] 85%|████████▍ | 212/250 [1:50:45<12:41, 20.03s/it] 85%|████████▌ | 213/250 [1:51:09<13:11, 21.38s/it] 86%|████████▌ | 214/250 [1:51:24<11:41, 19.49s/it] 86%|████████▌ | 215/250 [1:51:40<10:42, 18.36s/it] 86%|████████▋ | 216/250 [1:51:59<10:28, 18.49s/it] 87%|████████▋ | 217/250 [1:52:44<14:38, 26.63s/it] 87%|████████▋ | 218/250 [1:52:56<11:52, 22.27s/it] 88%|████████▊ | 219/250 [1:53:18<11:26, 22.13s/it] 88%|████████▊ | 220/250 [1:53:36<10:27, 20.92s/it] 88%|████████▊ | 221/250 [1:53:54<09:42, 20.08s/it] 89%|████████▉ | 222/250 [1:54:11<08:52, 19.03s/it] 89%|████████▉ | 223/250 [1:54:44<10:29, 23.32s/it] 90%|████████▉ | 224/250 [1:55:04<09:40, 22.32s/it] 90%|█████████ | 225/250 [1:55:22<08:45, 21.03s/it] 90%|█████████ | 226/250 [1:55:37<07:38, 19.11s/it] 91%|█████████ | 227/250 [1:56:05<08:18, 21.67s/it] 91%|█████████ | 228/250 [1:56:24<07:44, 21.10s/it] 92%|█████████▏| 229/250 [1:56:44<07:13, 20.63s/it] 92%|█████████▏| 230/250 [1:57:07<07:09, 21.49s/it] 92%|█████████▏| 231/250 [1:57:34<07:14, 22.87s/it] 93%|█████████▎| 232/250 [1:57:49<06:12, 20.68s/it] 93%|█████████▎| 233/250 [1:58:31<07:39, 27.01s/it] 94%|█████████▎| 234/250 [1:58:47<06:21, 23.83s/it] 94%|█████████▍| 235/250 [1:59:06<05:36, 22.43s/it] 94%|█████████▍| 236/250 [1:59:33<05:31, 23.68s/it] 95%|█████████▍| 237/250 [1:59:51<04:43, 21.83s/it] 95%|█████████▌| 238/250 [2:01:46<09:58, 49.88s/it] 96%|█████████▌| 239/250 [2:02:08<07:37, 41.56s/it] 96%|█████████▌| 240/250 [2:02:37<06:18, 37.83s/it] 96%|█████████▋| 241/250 [2:02:56<04:50, 32.23s/it] 97%|█████████▋| 242/250 [2:03:06<03:23, 25.41s/it] 97%|█████████▋| 243/250 [2:03:23<02:41, 23.02s/it] 98%|█████████▊| 244/250 [2:03:41<02:09, 21.57s/it] 98%|█████████▊| 245/250 [2:03:57<01:39, 19.86s/it] 98%|█████████▊| 246/250 [2:04:25<01:29, 22.34s/it] 99%|█████████▉| 247/250 [2:06:26<02:35, 51.87s/it] 99%|█████████▉| 248/250 [2:06:54<01:29, 44.77s/it]100%|█████████▉| 249/250 [2:07:29<00:41, 41.59s/it]100%|██████████| 250/250 [2:07:45<00:00, 33.97s/it]Building prefix dict from the default dictionary ...
Loading model from cache /tmp/jieba.cache
Loading model cost 0.496 seconds.
Prefix dict has been built successfully.
100%|██████████| 250/250 [2:07:55<00:00, 30.70s/it]
***** predict metrics *****
  predict_bleu-4             =    36.8818
  predict_rouge-1            =    40.0645
  predict_rouge-2            =    22.1502
  predict_rouge-l            =    39.6013
  predict_runtime            = 2:08:17.32
  predict_samples_per_second =       0.65
  predict_steps_per_second   =      0.032
06/21/2024 04:06:50 - INFO - llamafactory.train.sft.trainer - Saving prediction results to saves/mistral/orpo_qlora/predict/generated_predictions.jsonl
